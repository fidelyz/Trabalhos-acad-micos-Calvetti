exemplo de chave simetrica 

import javax.crypto.Cipher;
import javax.crypto.KeyGenerator;
import javax.crypto.SecretKey;
import javax.crypto.spec.SecretKeySpec;
import java.util.Base64;

public class CriptografiaSimetrica {

    public static String criptografarAES(String texto, SecretKey chave) throws Exception {
        Cipher cipher = Cipher.getInstance("AES");
        cipher.init(Cipher.ENCRYPT_MODE, chave);
        byte[] textoCriptografado = cipher.doFinal(texto.getBytes());
        return Base64.getEncoder().encodeToString(textoCriptografado);
    }

    public static String descriptografarAES(String textoCriptografado, SecretKey chave) throws Exception {
        Cipher cipher = Cipher.getInstance("AES");
        cipher.init(Cipher.DECRYPT_MODE, chave);
        byte[] textoDescriptografado = cipher.doFinal(Base64.getDecoder().decode(textoCriptografado));
        return new String(textoDescriptografado);
    }

    public static SecretKey gerarChaveAES() throws Exception {
        KeyGenerator keyGen = KeyGenerator.getInstance("AES");
        keyGen.init(128); // Tamanho da chave de 128 bits
        return keyGen.generateKey();
    }

    public static void main(String[] args) throws Exception {
        String textoOriginal = "Texto secreto!";
        SecretKey chave = gerarChaveAES();

        // Criptografar
        String textoCriptografado = criptografarAES(textoOriginal, chave);
        System.out.println("Texto criptografado: " + textoCriptografado);

        // Descriptografar
        String textoDescriptografado = descriptografarAES(textoCriptografado, chave);
        System.out.println("Texto descriptografado: " + textoDescriptografado);
    }
}


Exemplo de chave assimetrica:

import java.security.*;
import javax.crypto.Cipher;
import java.util.Base64;

public class CriptografiaAssimetrica {

    public static String criptografarRSA(String texto, PublicKey chavePublica) throws Exception {
        Cipher cipher = Cipher.getInstance("RSA");
        cipher.init(Cipher.ENCRYPT_MODE, chavePublica);
        byte[] textoCriptografado = cipher.doFinal(texto.getBytes());
        return Base64.getEncoder().encodeToString(textoCriptografado);
    }

    public static String descriptografarRSA(String textoCriptografado, PrivateKey chavePrivada) throws Exception {
        Cipher cipher = Cipher.getInstance("RSA");
        cipher.init(Cipher.DECRYPT_MODE, chavePrivada);
        byte[] textoDescriptografado = cipher.doFinal(Base64.getDecoder().decode(textoCriptografado));
        return new String(textoDescriptografado);
    }

    public static KeyPair gerarChavesRSA() throws NoSuchAlgorithmException {
        KeyPairGenerator keyGen = KeyPairGenerator.getInstance("RSA");
        keyGen.initialize(2048); // Tamanho da chave de 2048 bits
        return keyGen.generateKeyPair();
    }

    public static void main(String[] args) throws Exception {
        String textoOriginal = "Texto secreto com RSA!";
        KeyPair chavePar = gerarChavesRSA();

        // Criptografar com chave pública
        String textoCriptografado = criptografarRSA(textoOriginal, chavePar.getPublic());
        System.out.println("Texto criptografado com RSA: " + textoCriptografado);

        // Descriptografar com chave privada
        String textoDescriptografado = descriptografarRSA(textoCriptografado, chavePar.getPrivate());
        System.out.println("Texto descriptografado com RSA: " + textoDescriptografado);
    }
}


exemplo de função hash:

import java.security.MessageDigest;
import java.util.Base64;

public class FuncaoHash {

    public static String gerarHashSHA256(String texto) throws Exception {
        MessageDigest digest = MessageDigest.getInstance("SHA-256");
        byte[] hashBytes = digest.digest(texto.getBytes());
        return Base64.getEncoder().encodeToString(hashBytes);
    }

    public static void main(String[] args) throws Exception {
        String textoOriginal = "Texto para hash!";
        String hash = gerarHashSHA256(textoOriginal);
        System.out.println("Hash SHA-256: " + hash);
    }
}
